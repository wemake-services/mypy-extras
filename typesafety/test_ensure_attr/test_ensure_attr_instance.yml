# TODO: support Overloaded

- case: ensure_attr_attr
  disable_cache: false
  main: |
    from mypy_extras import ensure_attr
    from typing_extensions import Literal

    class Test(object):
        x: int

    reveal_type(ensure_attr(Test, 'x'))  # N: Revealed type is 'Literal['x']'


- case: ensure_attr_method
  disable_cache: false
  main: |
    from mypy_extras import ensure_attr
    from typing_extensions import Literal

    class Test(object):
        def x(self, a: int) -> str:
            ...

    reveal_type(ensure_attr(Test, 'x'))  # N: Revealed type is 'Literal['x']'


- case: ensure_attr_classmethod
  disable_cache: false
  main: |
    from mypy_extras import ensure_attr
    from typing_extensions import Literal

    class Test(object):
        @classmethod
        def x(cls, a: int) -> str:
            ...

    reveal_type(ensure_attr(Test, 'x'))  # N: Revealed type is 'Literal['x']'


- case: ensure_attr_staticmethod
  disable_cache: false
  main: |
    from mypy_extras import ensure_attr
    from typing_extensions import Literal

    class Test(object):
        @staticmethod
        def x(a: int) -> str:
            ...

    reveal_type(ensure_attr(Test, 'x'))  # N: Revealed type is 'Literal['x']'


- case: ensure_attr_callback
  disable_cache: false
  main: |
    from mypy_extras import ensure_attr
    from typing_extensions import Literal

    class Test(object):
        x: int

    def test(arg: Literal['x']):
        ...

    test(ensure_attr(Test, 'x'))
